/**
 * @namespace typedef
 */

/**
 * @exports ExperimentTag
 * @typedef ExperimentTag Tag for an experiment.
 * @type {Object}
 * @property {String} key The tag key.
 * @property {String} value The tag value.
 */

/**
 * @exports ViewType
 * @typedef {String} ACTIVE_ONLY Default. Return only active experiments.
 * @typedef {String} DELETED_ONLY Return only deleted experiments.
 * @typedef {String} ALL Get all experiments.
 * @typedef {'ACTIVE_ONLY' | 'DELETED_ONLY' | 'ALL'} ViewType View type for ListExperiments query.
 */

/**
 * @exports Experiment
 * @typedef Experiment Experiment
 * @type {Object}
 * @property {String} experiment_id Unique identifier for the experiment.
 * @property {String} name Human readable name that identifies the experiment.
 * @property {String} artifact_location Location where artifacts for the experiment are stored.
 * @property {String} lifecycle_stage Current life cycle stage of the experiment: “active” or “deleted”. Deleted experiments are not returned by APIs.
 * @property {Number} last_update_time Last update time
 * @property {Number} creation_time Creation time
 * @property {Array<ExperimentTag>} tags Additional metadata key-value pairs.
 */

/**
 * @exports RegisteredModelTag
 * @typedef RegisteredModelTag Tag for a registered model.
 * @type {Object}
 * @property {String} key The tag key.
 * @property {String} value The tag value.
 */

/**
 * @exports ModelVersionTag
 * @typedef ModelVersionTag Tag for a model version.
 * @type {Object}
 * @property {String} key The tag key.
 * @property {String} value The tag value.
 */

/**
 * @exports ModelVersionStatus
 * @typedef {String} PENDING_REGISTRATION Request to register a new model version is pending as server performs background tasks.
 * @typedef {String} FAILED_REGISTRATION Request to register a new model version has failed.
 * @typedef {String} READY Model version is ready for use.
 * @typedef {"PENDING_REGISTRATION" | "FAILED_REGISTRATION" | "READY"} ModelVersionStatus
 */

/**
 * @exports ModelVersion
 * @typedef ModelVersion
 * @type {Object}
 * @property {String} name Unique name of the model
 * @property {String} version Model’s version number.
 * @property {Date} creation_timestamp Timestamp recorded when this model_version was created.
 * @property {Date} last_updated_timestamp Timestamp recorded when metadata for this model_version was last updated.
 * @property {String} user_id User that created this model_version.
 * @property {String} current_stage Current stage for this model_version.
 * @property {String} description Description of this model_version.
 * @property {String} source URI indicating the location of the source model artifacts, used when creating model_version
 * @property {String} run_id MLflow run ID used when creating model_version, if source was generated by an experiment run stored in MLflow tracking server.
 * @property {ModelVersionStatus} status Current status of model_version.
 * @property {String} status_message Details on current status, if it is pending or failed.
 * @property {Array<ModelVersionTag>} tags Additional metadata key-value pairs for this model_version.
 * @property {String} run_link Direct link to the run that generated this versions
 */

/**
 * @exports RegisteredModel
 * @typedef RegisteredModel
 * @type {Object}
 * @property {String} name Unique name of the model
 * @property {Date} creation_timestamp TTimestamp recorded when this registered_model was created.
 * @property {Date} last_updated_timestamp Timestamp recorded when metadata for this registered_model was last updated.
 * @property {String} user_id User that created this registered_model
 * @property {String} description Description of this registered_model.
 * @property {String} source URI indicating the location of the source model artifacts, used when creating registered_model
 * @property {Array<ModelVersion>} latest_versions Collection of latest model versions for each stage. Only contains models with current READY status.
 * @property {Array<ModelVersionTag>} tags Additional metadata key-value pairs for this registered_model.
 */

/**
 * @exports Param
 * @typedef Param Parameters associated with a run.
 * @type {Object}
 * @property {String} key Key identifying this param.
 * @property {String} value Value associated with this param.
 */

/**
 * @exports FileInfo
 * @typedef FileInfo Metadata of a single artifact file or directory.
 * @type {Object}
 * @property {String} path Path relative to the root artifact directory run.
 * @property {Boolean} is_dir Whether the path is a directory.
 * @property {Number} file_size Size in bytes. Unset for directories.
 */

/**
 * @exports Metric
 * @typedef Metric Metric associated with a run, represented as a key-value pair.
 * @type {Object}
 * @property {String} key Key identifying this metric.
 * @property {Number} value Value associated with this metric.
 * @property {Date} timestamp The timestamp at which this metric was recorded.
 * @property {Number} step Step at which to log the metric.
 */

/**
 * @exports RunTag
 * @typedef RunTag Tag for a run.
 * @type {Object}
 * @property {String} key The tag key.
 * @property {String} value The tag value.
 */

/**
 * @exports RunData
 * @typedef RunData Run data (metrics, params, and tags).
 * @type {object}
 * @property {Array<Metric>} metrics Run metrics.
 * @property {Array<Param>} params Run parameters.
 * @property {Array<RunTag>} tags Additional metadata key-value pairs.
 */

/**
 * @exports RunStatus
 * @typedef {String} RUNNING Run has been initiated.
 * @typedef {String} SCHEDULED Run is scheduled to run at a later time.
 * @typedef {String} FINISHED Run has completed.
 * @typedef {String} FAILED Run execution failed.
 * @typedef {String} KILLED Run killed by user.
 * @typedef {'RUNNING' | 'SCHEDULED' | 'FINISHED' | 'FAILED' | 'KILLED' } RunStatus Status of a run.
 */

/**
 * @exports RunInfo
 * @typedef RunInfo Metadata of a single run.
 * @type {object}
 * @property {String} run_id Unique identifier for the run.
 * @property {String} experiment_id The experiment ID.
 * @property {String} run_name The name of the run.
 * @property {RunStatus} status Current status of the run.
 * @property {Date} start_time Unix timestamp of when the run started in milliseconds.
 * @property {Date} end_time Unix timestamp of when the run ended in milliseconds.
 * @property {String} artifact_uri URI of the directory where artifacts should be uploaded. This can be a local path (starting with “/”), or a distributed file system (DFS) path, like s3://bucket/directory or dbfs:/my/directory. If not set, the local ./mlruns directory is chosen.
 * @property {String} lifecycle_stage Current life cycle stage of the experiment : OneOf(“active”, “deleted”)
 */

/**
 * @exports Run
 * @typedef Run A single run.
 * @type {Object}
 * @property {RunInfo} info Run metadata.
 * @property {RunData} data Run data.
 */

export {};
